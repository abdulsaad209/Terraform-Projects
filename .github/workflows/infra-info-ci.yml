# name: Terraform CI/CD - Infra Team

# on:
#   push:
#     branches:
#       - master  # Deploy to production
#   pull_request:
#     branches:
#       - master  # Validate before merge
# env:
#     AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
#     AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#     aws-region: us-east-1
    
# jobs:
#   terraform:
#     name: Terraform Infrastructure Pipeline
#     runs-on: ubuntu-latest

#     env:
#       AWS_REGION: us-east-1
#       S3_BUCKET: ${{ secrets.TERRAFORM_S3_BUCKET }}
#       TF_VERSION: 1.12.2

#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v3
#         with:
#           terraform_version: ${{ env.TF_VERSION }}

#       - name: Setup AWS Credentials
#         uses: aws-actions/configure-aws-credentials@v2
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ env.AWS_REGION }}

#       - name: Install TFLint, Checkov, Infracost, DriftCTL
#         run: |
#           curl -sSfL https://raw.githubusercontent.com/infracost/infracost/master/scripts/install.sh | sh
#           export PATH="$HOME/bin:$PATH"
#           infracost --version
#         #   curl -sL https://raw.githubusercontent.com/cloudskiff/driftctl/release/latest/install.sh | bash
#         #   pip install checkov
#         #   curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
#         #   echo "$HOME/.driftctl" >> $GITHUB_PATH
#         #   echo "$HOME/.infracost/bin" >> $GITHUB_PATH

#       - name: Terraform Init
#         working-directory: ./EKS
#         run: terraform init

#       - name: Terraform Validate
#         working-directory: ./EKS
#         run: terraform validate

#     #   - name: Run TFLint
#     #     working-directory: ./EKS
#     #     run: |
#     #       tflint --init
#     #       tflint

#     #   - name: Run Checkov (Security Scan)
#     #     run: |
#     #       checkov -d ./EKS -o json > checkov-report.json

#       - name: Infracost (Estimate Cost)
#         env:
#           INFRACOST_API_KEY: ${{ secrets.INFRACOST_API_KEY }}
#         run: |
#           infracost breakdown --path ./EKS \
#             --format json \
#             --out-file infracost-report.json

#       - name: Terraform Plan
#         working-directory: ./EKS
#         run: terraform plan -out=tfplan.binary && terraform show -json tfplan.binary > plan.json

#       - name: Upload Reports to S3 (PR or Main)
#         if: always()
#         run: |
#           aws s3 cp checkov-report.json s3://${{ env.S3_BUCKET }}/reports/checkov-${{ github.run_id }}.json
#           aws s3 cp infracost-report.json s3://${{ env.S3_BUCKET }}/reports/infracost-${{ github.run_id }}.json
#           aws s3 cp ./EKS/plan.json s3://${{ env.S3_BUCKET }}/reports/plan-${{ github.run_id }}.json

#     #   - name: Terraform Apply (Only on main)
#     #     if: github.ref == 'refs/heads/main'
#     #     working-directory: ./EKS
#     #     run: terraform apply -auto-approve tfplan.binary

#     #   - name: Run Drift Detection (Only on main)
#     #     if: github.ref == 'refs/heads/main'
#     #     run: |
#     #       driftctl scan --from tfstate+s3://${{ env.S3_BUCKET }}/path/to/state.tfstate \
#     #         --output json > drift-report.json
#     #       aws s3 cp drift-report.json s3://${{ env.S3_BUCKET }}/reports/drift-${{ github.run_id }}.json

#     #   - name: Trigger Config Management Pipeline (Optional)
#     #     if: github.ref == 'refs/heads/main'
#     #     run: |
#     #       curl -X POST https://awx.example.com/api/v2/job_templates/42/launch/ \
#     #       -H "Authorization: Bearer ${{ secrets.AWX_TOKEN }}"
